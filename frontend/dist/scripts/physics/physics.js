class Universe{constructor(){this.setFramerate(60)}setListenerObjects(t){this.objectsToListen=t,t.listenerObjects.push(this)}setFramerate(t){this.framerate=t}calculateCollide(t,s){removeObjectFromAll(t),removeObjectFromAll(s);let e=new Asteroid("abc");e.setPositionX((t.x+s.x)/2),e.setPositionY((t.y+s.y)/2),e.setMass(t.mass+s.mass),t.mass>=s.mass?(e.id=t.id,e.setColor(t.color),e.setDensity(1.1*t.density)):(e.id=s.id,e.setColor(s.color),e.setDensity(1.1*s.density)),e.setVelocityX((t.mass*t.vx+s.mass*s.vx)/e.mass),e.setVelocityY((t.mass*t.vy+s.mass*s.vy)/e.mass)}calculateGravity(){for(let t=0;t<this.objectsToListen.length;t++)for(let s=0;s<this.objectsToListen.length;s++)if(t!==s){let e=Math.pow(this.objectsToListen[t].x-this.objectsToListen[s].x,2)+Math.pow(this.objectsToListen[t].y-this.objectsToListen[s].y,2),i=this.objectsToListen[s].mass/e;e=Math.sqrt(e),this.objectsToListen[t].ax+=i*(this.objectsToListen[s].x-this.objectsToListen[t].x)/e,this.objectsToListen[t].ay+=i*(this.objectsToListen[s].y-this.objectsToListen[t].y)/e}for(let t=0;t<this.objectsToListen.length;t++)this.objectsToListen[t].vx+=this.objectsToListen[t].ax,this.objectsToListen[t].vy+=this.objectsToListen[t].ay;for(let t=0;t<this.objectsToListen.length;t++)for(let s=0;s<this.objectsToListen.length;s++)t!==s&&(this.objectsToListen[t].x<this.objectsToListen[s].x&&this.objectsToListen[t].x+this.objectsToListen[t].vx+this.objectsToListen[t].radius>this.objectsToListen[s].x+this.objectsToListen[s].vx-this.objectsToListen[s].radius||this.objectsToListen[t].x>this.objectsToListen[s].x&&this.objectsToListen[t].x+this.objectsToListen[t].vx-this.objectsToListen[t].radius<this.objectsToListen[s].x+this.objectsToListen[s].vx+this.objectsToListen[s].radius)&&(this.objectsToListen[t].y<this.objectsToListen[s].y&&this.objectsToListen[t].y+this.objectsToListen[t].vy+this.objectsToListen[t].radius>this.objectsToListen[s].y+this.objectsToListen[s].vy-this.objectsToListen[s].radius||this.objectsToListen[t].y>this.objectsToListen[s].y&&this.objectsToListen[t].y+this.objectsToListen[t].vy-this.objectsToListen[t].radius<this.objectsToListen[s].y+this.objectsToListen[s].vy+this.objectsToListen[s].radius)&&this.calculateCollide(this.objectsToListen[t],this.objectsToListen[s]);for(let t=0;t<this.objectsToListen.length;t++)this.objectsToListen[t].x+=this.objectsToListen[t].vx,this.objectsToListen[t].y+=this.objectsToListen[t].vy}start(){let t=Math.floor(1e3/this.framerate);this.running=!0,this.interval=setInterval(()=>{this.calculateGravity()},t)}end(){this.running&&(this.running=!1,clearInterval(this.interval))}}