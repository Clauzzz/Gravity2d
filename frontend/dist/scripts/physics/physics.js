class Universe{constructor(){this.setFramerate(60)}setListenerObjects(s){this.objectsToListen=s,s.listenerObjects.push(this)}setFramerate(s){this.framerate=s}calculateCollide(s,t){let e;removeObjectFromAll(s),removeObjectFromAll(t),s.mass>=t.mass?(e=new SpaceObject(s.id),e.setColor(s.color),e.setDensity(1*s.density)):(e=new SpaceObject(t.id),e.setColor(t.color),e.setDensity(1*t.density)),e.setMass(s.mass+t.mass),e.setPositionX((s.x*s.mass+t.x*t.mass)/e.mass),e.setPositionY((s.y*s.mass+t.y*t.mass)/e.mass),e.setVelocityX((s.mass*s.vx+t.mass*t.vx)/e.mass),e.setVelocityY((s.mass*s.vy+t.mass*t.vy)/e.mass)}calculateGravity(){for(let s=0;s<this.objectsToListen.length;s++){let t=0,e=0;for(let i=0;i<this.objectsToListen.length;i++)if(s!==i){let o=Math.pow(this.objectsToListen[s].x-this.objectsToListen[i].x,2)+Math.pow(this.objectsToListen[s].y-this.objectsToListen[i].y,2),n=this.objectsToListen[i].mass/o;o=Math.sqrt(o),t+=n*(this.objectsToListen[i].x-this.objectsToListen[s].x)/o,e+=n*(this.objectsToListen[i].y-this.objectsToListen[s].y)/o}this.objectsToListen[s].ax=t,this.objectsToListen[s].ay=e}for(let s=0;s<this.objectsToListen.length;s++)this.objectsToListen[s].vx+=this.objectsToListen[s].ax,this.objectsToListen[s].vy+=this.objectsToListen[s].ay;for(let s=0;s<this.objectsToListen.length;s++)for(let t=0;t<this.objectsToListen.length;t++)s!==t&&(this.objectsToListen[s].x<=this.objectsToListen[t].x&&this.objectsToListen[s].x+this.objectsToListen[s].vx+this.objectsToListen[s].radius>this.objectsToListen[t].x+this.objectsToListen[t].vx-this.objectsToListen[t].radius||this.objectsToListen[s].x>this.objectsToListen[t].x&&this.objectsToListen[s].x+this.objectsToListen[s].vx-this.objectsToListen[s].radius<this.objectsToListen[t].x+this.objectsToListen[t].vx+this.objectsToListen[t].radius)&&(this.objectsToListen[s].y<=this.objectsToListen[t].y&&this.objectsToListen[s].y+this.objectsToListen[s].vy+this.objectsToListen[s].radius>this.objectsToListen[t].y+this.objectsToListen[t].vy-this.objectsToListen[t].radius||this.objectsToListen[s].y>this.objectsToListen[t].y&&this.objectsToListen[s].y+this.objectsToListen[s].vy-this.objectsToListen[s].radius<this.objectsToListen[t].y+this.objectsToListen[t].vy+this.objectsToListen[t].radius)&&(this.calculateCollide(this.objectsToListen[s],this.objectsToListen[t]),t--);for(let s=0;s<this.objectsToListen.length;s++)this.objectsToListen[s].x+=this.objectsToListen[s].vx,this.objectsToListen[s].y+=this.objectsToListen[s].vy}start(){let s=Math.floor(1e3/this.framerate);this.running=!0,this.interval=setInterval(()=>{this.calculateGravity()},s)}end(){this.running&&(this.running=!1,clearInterval(this.interval))}}
